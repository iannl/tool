<svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" preserveAspectRatio="xMidYMid meet" style="fill-rule:evenodd" viewBox="-20 -140 840 840">
 <title>connect4::svg game::treebuilder</title>
 <desc>a simple example of ai in svg</desc>
 <defs>

 <path id="pfeil" d="M28 2l0 48 -25 0 45 49 46 -48 -25 -1 1 -48 -42 0zm0 24m-13 24m10 25m46 0m11 -24m-12 -25m-21 -24"/>
<!-- the gameboard -->
	<path id="gb" d="M57 0l644 0c31,0 57,27 57,59l0 519c0,32 -26,58 -57,58l-644 0c-32,0 -58,-26 -58,-58l0 -519c0,-32 26,-59 58,-59zm107 13c26,0 47,21 47,46 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-46 47,-46zm105 -1c26,0 47,21 47,47 0,25 -21,47 -47,47 -26,0 -47,-22 -47,-47 0,-26 21,-47 47,-47zm105 0c26,0 47,21 47,47 0,25 -21,47 -47,47 -26,0 -47,-22 -47,-47 0,-26 21,-47 47,-47zm104 0c25,0 47,21 47,47 0,25 -22,47 -47,47 -26,0 -47,-22 -47,-47 0,-26 21,-47 47,-47zm104 0c26,0 47,21 47,47 0,25 -21,47 -47,47 -26,0 -47,-22 -47,-47 0,-26 21,-47 47,-47zm106 -1c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm-627 105c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 0c25,0 47,21 47,47 0,26 -22,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 -1c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm103 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -25,0 -47,-21 -47,-47 0,-26 22,-47 47,-47zm105 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm106 -1c25,0 46,22 46,47 0,26 -21,47 -46,47 -26,0 -47,-21 -47,-47 0,-25 21,-47 47,-47zm-631 106c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 -1c26,0 47,21 47,47 0,26 -21,47 -47,47 -25,0 -47,-21 -47,-47 0,-26 22,-47 47,-47zm105 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm104 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm104 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm106 -1c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm-629 107c26,0 47,22 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-47 47,-47zm105 0c26,0 47,22 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-47 47,-47zm105 0c26,0 47,21 47,46 0,26 -21,47 -47,47 -25,0 -47,-21 -47,-47 0,-25 22,-46 47,-46zm105 0c26,0 47,21 47,46 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-46 47,-46zm104 0c26,0 47,21 47,46 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-46 47,-46zm104 0c26,0 47,21 47,46 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-46 47,-46zm106 -1c26,0 47,21 47,47 0,25 -21,47 -47,47 -26,0 -47,-22 -47,-47 0,-26 21,-47 47,-47zm-629 104c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 -1c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm104 0c25,0 47,21 47,47 0,26 -22,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm104 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm106 -1c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm-629 102c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 0c26,0 47,21 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-26 21,-47 47,-47zm105 -1c26,0 47,22 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-47 47,-47zm105 0c26,0 47,22 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-47 47,-47zm104 0c26,0 47,22 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-47 47,-47zm104 0c26,0 47,22 47,47 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-47 47,-47zm106 0c26,0 47,21 47,46 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-46 47,-46zm-629 -514c26,0 47,21 47,46 0,26 -21,47 -47,47 -26,0 -47,-21 -47,-47 0,-25 21,-46 47,-46z"/>
  
  <symbol viewBox="0 0 128 128" id="bluestone">
  <circle fill="yellow" cx="64" cy="64" r="64"/>
</symbol>
  <symbol viewBox="0 0 128 128" id="redstone">
  <circle fill="red" cx="64" cy="64" r="64"/>
</symbol>
  <symbol viewBox="0 0 128 128" id="shadowstone">
  <circle fill="black" cx="64" cy="64" r="64" fill-opacity="0.5"/>
</symbol>

</defs>
  
<g transform="translate(20 7)" fill-opacity="0.5">
<use xlink:href="#gb" x="10" y="0" fill="black"/>
</g>

<g transform="translate(9 -7)">
<use xlink:href="#gb" x="10" y="0" fill="darkblue"/>
</g>

<g id="swCurrent" transform="translate(210 0)">
<use xlink:href="#pfeil" x="20" y="-110" fill="black" fill-opacity="0.5"/>
<use xlink:href="#pfeil" x="10" y="-120" fill="black" stroke="red"/>
<use id="shadow" xlink:href="#shadowstone" x="20" y="-245" width="100" height="100"/>
<use id="currentStone" xlink:href="#bluestone" x="10" y="-250" width="100" height="100"/>
</g>

<g id="sCurrent" visibility="hidden">
<use id="shadow" xlink:href="#shadowstone" x="20" y="-245" width="100" height="100"/>
<use id="playedStone" xlink:href="#bluestone" x="10" y="-250" width="100" height="100"/>
</g>

<g id="board">

</g>
<use xlink:href="#gb" x="10" y="0" fill="blue"/>







<g fill-opacity="0">
<rect x="10" y="-200" width="105" height="835" onmouseover="setSWCurrent(0)" onmousedown="startAnimMove(1)"/>
<rect x="115" y="-200" width="105" height="835" onmouseover="setSWCurrent(105)" onmousedown="startAnimMove(2)"/>
<rect x="220" y="-200" width="105" height="835" onmouseover="setSWCurrent(210)" onmousedown="startAnimMove(3)"/>
<rect x="325" y="-200" width="105" height="835" onmouseover="setSWCurrent(315)" onmousedown="startAnimMove(4)"/>
<rect x="430" y="-200" width="105" height="835" onmouseover="setSWCurrent(420)" onmousedown="startAnimMove(5)"/>
<rect x="535" y="-200" width="105" height="835" onmouseover="setSWCurrent(525)" onmousedown="startAnimMove(6)"/>
<rect x="640" y="-200" width="105" height="835" onmouseover="setSWCurrent(630)" onmousedown="startAnimMove(7)"/>
</g>
<g id="countW" visibility="hidden">
<rect x="-25" y="-250" width="800" height="1000" fill-opacity="0"/>
<text x="100" y="700" font-size="50" fill="red">please wait</text>
</g>
<g id="gow" visibility="hidden">
<rect onclick="newGame()" x="-25" y="-250" width="850" height="1000" fill-opacity="0"/>


<text stroke-opacity="0.5" pointer-events="none" x="435" y="360" font-size="95" fill="black" stroke="black" stroke-width="50" text-anchor="middle">gAmE oVeR</text>
   
  
  <text pointer-events="none" x="425" y="350" font-size="115" fill="red" stroke="red" stroke-width="50" text-anchor="middle">gAmE oVeR</text>
  <text pointer-events="none" x="425" y="350" font-size="115" fill="green" stroke="green" stroke-width="40" text-anchor="middle">gAmE oVeR</text>
  <text pointer-events="none" x="425" y="350" font-size="115" fill="blue" stroke="blue" stroke-width="30" text-anchor="middle">gAmE oVeR</text>
  <text pointer-events="none" x="425" y="350" font-size="115" fill="red" stroke="red" stroke-width="20" text-anchor="middle">gAmE oVeR</text>
  <text pointer-events="none" x="425" y="350" font-size="115" fill="green" stroke="green" stroke-width="10" text-anchor="middle">gAmE oVeR</text>
  
  <text pointer-events="none" x="425" y="350" font-size="115" fill="blue" text-anchor="middle">gAmE oVeR</text>
  <text id="wintext" pointer-events="none" x="425" y="700" font-size="55" fill="black" text-anchor="middle">draw ! score: 0/0</text>

</g>
<script><![CDATA[
var xlinkns="http://www.w3.org/1999/xlink"
var player="hum"
var gs="play"
var cbScore=-10000
var cbBest=-10000
var cbBestMove=-1
var comp=0
var compw=0
var compb=0
var hum=0
var humw=0
var humb=0
var gameboard= new Array(42)
var tscore= new Array(0,3,4,5,7,5,4,3
				  ,4,5,8,10,8,5,4
				  ,5,8,11,13,11,8,5
				  ,5,8,11,13,11,8,5
				  ,4,5,8,10,8,5,4
				  ,3,4,5,7,5,4,3
			
)
var movetable= new Array(0,36,37,38,39,40,41,42)
var moveind= new Array(0,0,0,0,0,0,0,0,0)
var stm=1
var rc=0
var nc=0
var falling
var fy1=-250
var fy2=-250
var strength=4
function setStrength(nr){
document.getElementById("btnbg"+strength).setAttributeNS("http://www.w3.org/1999/xlink","href","#btnp1")
document.getElementById("btnbg"+nr).setAttributeNS("http://www.w3.org/1999/xlink","href","#btnp3")
strength=nr
}
function newGame(){
gameboard= new Array(42)
cbScore=-10000
cbBestMove=-1
stm=1
player="hum"
gs="play"
movetable= new Array(0,36,37,38,39,40,41,42)
moveind= new Array(0,0,0,0,0,0,0,0,0)
rc=0
nc=0

var b=document.getElementById("board")
var n=document.createElementNS("http://www.w3.org/2000/svg","g")
n.setAttribute("id","board")
b.parentNode.replaceChild(n,b)
document.getElementById("currentStone").setAttributeNS(xlinkns,"href","#bluestone")
document.getElementById("gow").setAttribute("visibility","hidden")
}
function gonow(){
player="comp"
document.getElementById("countW").setAttribute("visibility","visible")
startrootLoop()
}
function setSWCurrent(nr){
document.getElementById("swCurrent").setAttribute("transform","translate("+nr+" 0)")

}

function startAnimMove(nr){


if(moveind[nr]<6){if(gs=="play"){
if(player=="hum"){player="comp"}else{player="hum"}
document.getElementById("sCurrent").setAttribute("transform","translate("+((nr-1)*105)+",0)")
if(stm==1){
document.getElementById("currentStone").setAttributeNS(xlinkns,"href","#redstone")
document.getElementById("playedStone").setAttributeNS(xlinkns,"href","#bluestone")
}else{
document.getElementById("currentStone").setAttributeNS(xlinkns,"href","#bluestone")
document.getElementById("playedStone").setAttributeNS(xlinkns,"href","#redstone")
}
var fa=document.getElementById("playedStone")

var ol=fa.cloneNode(true)

ol.setAttribute("x",(nr-1)*104+21)

ol.setAttribute("id","feld"+movetable[nr])
falling=ol
fy1=-250
fy2=519-moveind[nr]*102
document.getElementById("board").appendChild(ol)
document.getElementById("countW").setAttribute("visibility","visible")
domove(nr)
window.setTimeout("fallDown()",10)

if(won(1)==1){
//showwc(1);
document.getElementById("gow").setAttribute("visibility","visible");gs="won";
if(player=="hum") {
comp++
document.getElementById("wintext").firstChild.data="computer wins ! score:" + comp + "/" + hum
}else{
hum++
document.getElementById("wintext").firstChild.data="you won ! score:" + comp + "/" + hum
}
}
if(won(-1)==1){
//showwc(-1);
document.getElementById("gow").setAttribute("visibility","visible");gs="won";
if(player=="hum") {
comp++
document.getElementById("wintext").firstChild.data="computer wins ! score:" + comp + "/" + hum
}else{
hum++
document.getElementById("wintext").firstChild.data="you won ! score:" + comp + "/" + hum
}
}


if(won(-1)==0){
//showwc(-1);
document.getElementById("gow").setAttribute("visibility","visible");gs="won";
if(player=="hum") {
comp+=0.5
hum+=0.5
document.getElementById("wintext").firstChild.data="draw ! score:" + comp + "/" + hum
}else{
comp+=0.5
hum+=0.5
document.getElementById("wintext").firstChild.data="draw ! score:" + comp + "/" + hum
}
}


}
}

}

function fallDown(){
if (fy1 < fy2){
fy1=fy1+97
falling.setAttribute("y",fy1)
window.setTimeout("fallDown()",100)
}else{
falling.setAttribute("y",fy2)
startrootLoop()
}
}




function domove(move){
gameboard[movetable[move]]=stm
movetable[move]-=7
moveind[move]++
stm=-stm
}
function undomove(move){
movetable[move]+=7
gameboard[movetable[move]]=0
moveind[move]--
stm=-stm
}
function startrootLoop(){
if (player=="comp"){if(gs=="play"){

cbBest=-10000

setSWCurrent(0)

window.setTimeout("rootLoop()",10)
}

}else{document.getElementById("countW").setAttribute("visibility","hidden")}
}



function rootLoop(){

//setbest to -10000
var beta = -10000
var alpha = -beta
rc++
var m=rc
setSWCurrent(rc*105)
if(moveind[m]<6){
cbScore = -AlphaBeta(m, beta, alpha,strength)
//alert(cbScore+"/"+rc+"/"+cbBest)
if (cbScore>cbBest){cbBest=cbScore;cbBestMove=rc}
}

if(rc< 7){window.setTimeout("rootLoop()",100)}else{

var rn=cbBestMove
setSWCurrent((rn-1)*105)
startAnimMove(rn)

rc=0}
}
function gtScore(){
var bs=0
var rs=0
for(var i=1;i<=42;i++){
if(gameboard[i]==1){bs+=tscore[i]}
if(gameboard[i]==-1){rs+=tscore[i]}
}
if(stm==-1){return bs-rs}
if(stm==1){return rs-bs}
}

function AlphaBeta(mov , alpha , beta ,d) {
var i =0
var fm =0
var score =-10000
nc++;
domove (mov)
var w=won(-stm)
if(w>=0){undomove(mov);return -((1000*w)+d)}
if(d<=0){undomove(mov);return gtScore()}
for(var i=1;i<=7;i++)
{
if(moveind[i]<6)
{
score = Max(score, -AlphaBeta(i, -beta, -Max(alpha, score),d-1))
if (score >= beta) {undomove(mov);return score}
}
}
undomove(mov)
return score
}
function Max(a,b){
if (a>b){return a}
return b
}




function won(lstm){
if(gameboard[39]==lstm){if(gameboard[40]==lstm){if(gameboard[41]==lstm){if(gameboard[42]==lstm){return 1;}}}}
if(gameboard[38]==lstm){if(gameboard[39]==lstm){if(gameboard[40]==lstm){if(gameboard[41]==lstm){return 1;}}}}
if(gameboard[37]==lstm){if(gameboard[38]==lstm){if(gameboard[39]==lstm){if(gameboard[40]==lstm){return 1;}}}}
if(gameboard[36]==lstm){if(gameboard[37]==lstm){if(gameboard[38]==lstm){if(gameboard[39]==lstm){return 1;}}}}

if(gameboard[29]==lstm){if(gameboard[30]==lstm){if(gameboard[31]==lstm){if(gameboard[32]==lstm){return 1}}}}
if(gameboard[30]==lstm){if(gameboard[31]==lstm){if(gameboard[32]==lstm){if(gameboard[33]==lstm){return 1}}}}
if(gameboard[31]==lstm){if(gameboard[32]==lstm){if(gameboard[33]==lstm){if(gameboard[34]==lstm){return 1}}}}
if(gameboard[32]==lstm){if(gameboard[33]==lstm){if(gameboard[34]==lstm){if(gameboard[35]==lstm){return 1}}}}

if(gameboard[22]==lstm){if(gameboard[23]==lstm){if(gameboard[24]==lstm){if(gameboard[25]==lstm){return 1}}}}
if(gameboard[23]==lstm){if(gameboard[24]==lstm){if(gameboard[25]==lstm){if(gameboard[26]==lstm){return 1}}}}
if(gameboard[24]==lstm){if(gameboard[25]==lstm){if(gameboard[26]==lstm){if(gameboard[27]==lstm){return 1}}}}
if(gameboard[25]==lstm){if(gameboard[26]==lstm){if(gameboard[27]==lstm){if(gameboard[28]==lstm){return 1}}}}

if(gameboard[15]==lstm){if(gameboard[16]==lstm){if(gameboard[17]==lstm){if(gameboard[18]==lstm){return 1}}}}
if(gameboard[16]==lstm){if(gameboard[17]==lstm){if(gameboard[18]==lstm){if(gameboard[19]==lstm){return 1}}}}
if(gameboard[17]==lstm){if(gameboard[18]==lstm){if(gameboard[19]==lstm){if(gameboard[20]==lstm){return 1}}}}
if(gameboard[18]==lstm){if(gameboard[19]==lstm){if(gameboard[20]==lstm){if(gameboard[21]==lstm){return 1}}}}

if(gameboard[8]==lstm){if(gameboard[9]==lstm){if(gameboard[10]==lstm){if(gameboard[11]==lstm){return 1}}}}
if(gameboard[9]==lstm){if(gameboard[10]==lstm){if(gameboard[11]==lstm){if(gameboard[12]==lstm){return 1}}}}
if(gameboard[10]==lstm){if(gameboard[11]==lstm){if(gameboard[12]==lstm){if(gameboard[13]==lstm){return 1}}}}
if(gameboard[11]==lstm){if(gameboard[12]==lstm){if(gameboard[13]==lstm){if(gameboard[14]==lstm){return 1}}}}

if(gameboard[1]==lstm){if(gameboard[2]==lstm){if(gameboard[3]==lstm){if(gameboard[4]==lstm){return 1}}}}
if(gameboard[2]==lstm){if(gameboard[3]==lstm){if(gameboard[4]==lstm){if(gameboard[5]==lstm){return 1}}}}
if(gameboard[3]==lstm){if(gameboard[4]==lstm){if(gameboard[5]==lstm){if(gameboard[6]==lstm){return 1}}}}
if(gameboard[4]==lstm){if(gameboard[5]==lstm){if(gameboard[6]==lstm){if(gameboard[7]==lstm){return 1}}}}

if(gameboard[1]==lstm){if(gameboard[8]==lstm){if(gameboard[15]==lstm){if(gameboard[22]==lstm){return 1}}}}
if(gameboard[8]==lstm){if(gameboard[15]==lstm){if(gameboard[22]==lstm){if(gameboard[29]==lstm){return 1}}}}
if(gameboard[15]==lstm){if(gameboard[22]==lstm){if(gameboard[29]==lstm){if(gameboard[36]==lstm){return 1}}}}

if(gameboard[2]==lstm){if(gameboard[9]==lstm){if(gameboard[16]==lstm){if(gameboard[23]==lstm){return 1}}}}
if(gameboard[9]==lstm){if(gameboard[16]==lstm){if(gameboard[23]==lstm){if(gameboard[30]==lstm){return 1}}}}
if(gameboard[16]==lstm){if(gameboard[23]==lstm){if(gameboard[30]==lstm){if(gameboard[37]==lstm){return 1}}}}

if(gameboard[3]==lstm){if(gameboard[10]==lstm){if(gameboard[17]==lstm){if(gameboard[24]==lstm){return 1}}}}
if(gameboard[10]==lstm){if(gameboard[17]==lstm){if(gameboard[24]==lstm){if(gameboard[31]==lstm){return 1}}}}
if(gameboard[17]==lstm){if(gameboard[24]==lstm){if(gameboard[31]==lstm){if(gameboard[38]==lstm){return 1}}}}

if(gameboard[4]==lstm){if(gameboard[11]==lstm){if(gameboard[18]==lstm){if(gameboard[25]==lstm){return 1}}}}
if(gameboard[11]==lstm){if(gameboard[18]==lstm){if(gameboard[25]==lstm){if(gameboard[32]==lstm){return 1}}}}
if(gameboard[18]==lstm){if(gameboard[25]==lstm){if(gameboard[32]==lstm){if(gameboard[39]==lstm){return 1}}}}

if(gameboard[5]==lstm){if(gameboard[12]==lstm){if(gameboard[19]==lstm){if(gameboard[26]==lstm){return 1}}}}
if(gameboard[12]==lstm){if(gameboard[19]==lstm){if(gameboard[26]==lstm){if(gameboard[33]==lstm){return 1}}}}
if(gameboard[19]==lstm){if(gameboard[26]==lstm){if(gameboard[33]==lstm){if(gameboard[40]==lstm){return 1}}}}

if(gameboard[6]==lstm){if(gameboard[13]==lstm){if(gameboard[20]==lstm){if(gameboard[27]==lstm){return 1}}}}
if(gameboard[13]==lstm){if(gameboard[20]==lstm){if(gameboard[27]==lstm){if(gameboard[34]==lstm){return 1}}}}
if(gameboard[20]==lstm){if(gameboard[27]==lstm){if(gameboard[34]==lstm){if(gameboard[41]==lstm){return 1}}}}

if(gameboard[7]==lstm){if(gameboard[14]==lstm){if(gameboard[21]==lstm){if(gameboard[28]==lstm){return 1}}}}
if(gameboard[14]==lstm){if(gameboard[21]==lstm){if(gameboard[28]==lstm){if(gameboard[35]==lstm){return 1}}}}
if(gameboard[21]==lstm){if(gameboard[28]==lstm){if(gameboard[35]==lstm){if(gameboard[42]==lstm){return 1}}}}

if(gameboard[15]==lstm){if(gameboard[23]==lstm){if(gameboard[31]==lstm){if(gameboard[39]==lstm){return 1}}}}

if(gameboard[8]==lstm){if(gameboard[16]==lstm){if(gameboard[24]==lstm){if(gameboard[32]==lstm){return 1}}}}
if(gameboard[16]==lstm){if(gameboard[24]==lstm){if(gameboard[32]==lstm){if(gameboard[40]==lstm){return 1}}}}

if(gameboard[1]==lstm){if(gameboard[9]==lstm){if(gameboard[17]==lstm){if(gameboard[25]==lstm){return 1}}}}
if(gameboard[9]==lstm){if(gameboard[17]==lstm){if(gameboard[25]==lstm){if(gameboard[33]==lstm){return 1}}}}
if(gameboard[17]==lstm){if(gameboard[25]==lstm){if(gameboard[33]==lstm){if(gameboard[41]==lstm){return 1}}}}

if(gameboard[2]==lstm){if(gameboard[10]==lstm){if(gameboard[18]==lstm){if(gameboard[26]==lstm){return 1}}}}
if(gameboard[10]==lstm){if(gameboard[18]==lstm){if(gameboard[26]==lstm){if(gameboard[34]==lstm){return 1}}}}
if(gameboard[18]==lstm){if(gameboard[26]==lstm){if(gameboard[34]==lstm){if(gameboard[42]==lstm){return 1}}}}

if(gameboard[3]==lstm){if(gameboard[11]==lstm){if(gameboard[19]==lstm){if(gameboard[27]==lstm){return 1}}}}
if(gameboard[11]==lstm){if(gameboard[19]==lstm){if(gameboard[27]==lstm){if(gameboard[35]==lstm){return 1}}}}

if(gameboard[4]==lstm){if(gameboard[12]==lstm){if(gameboard[20]==lstm){if(gameboard[28]==lstm){return 1}}}}



if(gameboard[4]==lstm){if(gameboard[10]==lstm){if(gameboard[16]==lstm){if(gameboard[22]==lstm){return 1}}}}

if(gameboard[5]==lstm){if(gameboard[11]==lstm){if(gameboard[17]==lstm){if(gameboard[23]==lstm){return 1}}}}
if(gameboard[11]==lstm){if(gameboard[17]==lstm){if(gameboard[23]==lstm){if(gameboard[29]==lstm){return 1}}}}

if(gameboard[6]==lstm){if(gameboard[12]==lstm){if(gameboard[18]==lstm){if(gameboard[24]==lstm){return 1}}}}
if(gameboard[12]==lstm){if(gameboard[18]==lstm){if(gameboard[24]==lstm){if(gameboard[30]==lstm){return 1}}}}
if(gameboard[18]==lstm){if(gameboard[24]==lstm){if(gameboard[30]==lstm){if(gameboard[36]==lstm){return 1}}}}

if(gameboard[7]==lstm){if(gameboard[13]==lstm){if(gameboard[19]==lstm){if(gameboard[25]==lstm){return 1}}}}
if(gameboard[13]==lstm){if(gameboard[19]==lstm){if(gameboard[25]==lstm){if(gameboard[31]==lstm){return 1}}}}
if(gameboard[19]==lstm){if(gameboard[25]==lstm){if(gameboard[31]==lstm){if(gameboard[37]==lstm){return 1}}}}

if(gameboard[14]==lstm){if(gameboard[20]==lstm){if(gameboard[26]==lstm){if(gameboard[32]==lstm){return 1}}}}
if(gameboard[20]==lstm){if(gameboard[26]==lstm){if(gameboard[32]==lstm){if(gameboard[38]==lstm){return 1}}}}

if(gameboard[21]==lstm){if(gameboard[27]==lstm){if(gameboard[33]==lstm){if(gameboard[39]==lstm){return 1}}}}
for(var i=1;i<=7;i++){
if(moveind[i]<6){return -1}
}
return 0
}
function showwc(lstm){

}
]]></script>
</svg>